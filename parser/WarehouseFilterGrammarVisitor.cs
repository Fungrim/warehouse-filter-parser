//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\larsj\WarehouseFilterParser\parser\WarehouseFilterGrammar.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="WarehouseFilterGrammarParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IWarehouseFilterGrammarVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="WarehouseFilterGrammarParser.parse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParse([NotNull] WarehouseFilterGrammarParser.ParseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>binaryExpression</c>
	/// labeled alternative in <see cref="WarehouseFilterGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryExpression([NotNull] WarehouseFilterGrammarParser.BinaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>decimalExpression</c>
	/// labeled alternative in <see cref="WarehouseFilterGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecimalExpression([NotNull] WarehouseFilterGrammarParser.DecimalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>stringExpression</c>
	/// labeled alternative in <see cref="WarehouseFilterGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringExpression([NotNull] WarehouseFilterGrammarParser.StringExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>boolExpression</c>
	/// labeled alternative in <see cref="WarehouseFilterGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolExpression([NotNull] WarehouseFilterGrammarParser.BoolExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="WarehouseFilterGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierExpression([NotNull] WarehouseFilterGrammarParser.IdentifierExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>methodCallExpression</c>
	/// labeled alternative in <see cref="WarehouseFilterGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodCallExpression([NotNull] WarehouseFilterGrammarParser.MethodCallExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="WarehouseFilterGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpression([NotNull] WarehouseFilterGrammarParser.NotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parenExpression</c>
	/// labeled alternative in <see cref="WarehouseFilterGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenExpression([NotNull] WarehouseFilterGrammarParser.ParenExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>comparatorExpression</c>
	/// labeled alternative in <see cref="WarehouseFilterGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparatorExpression([NotNull] WarehouseFilterGrammarParser.ComparatorExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WarehouseFilterGrammarParser.methodCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodCall([NotNull] WarehouseFilterGrammarParser.MethodCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WarehouseFilterGrammarParser.comparator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparator([NotNull] WarehouseFilterGrammarParser.ComparatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WarehouseFilterGrammarParser.binary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinary([NotNull] WarehouseFilterGrammarParser.BinaryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WarehouseFilterGrammarParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBool([NotNull] WarehouseFilterGrammarParser.BoolContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WarehouseFilterGrammarParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgumentList([NotNull] WarehouseFilterGrammarParser.ArgumentListContext context);
}
