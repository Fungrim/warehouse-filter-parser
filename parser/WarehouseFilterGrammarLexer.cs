//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\larsj\WarehouseFilterParser\parser\WarehouseFilterGrammar.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class WarehouseFilterGrammarLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		AND=1, OR=2, NOT=3, TRUE=4, FALSE=5, GT=6, GE=7, NE=8, LT=9, LE=10, EQ=11, 
		LPAREN=12, RPAREN=13, DECIMAL=14, IDENTIFIER=15, WS=16, Q=17, STRING=18, 
		COMMA=19;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"AND", "OR", "NOT", "TRUE", "FALSE", "GT", "GE", "NE", "LT", "LE", "EQ", 
		"LPAREN", "RPAREN", "DECIMAL", "IDENTIFIER", "WS", "Q", "STRING", "COMMA"
	};


	public WarehouseFilterGrammarLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public WarehouseFilterGrammarLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'>'", "'>='", "'!='", "'<'", "'<='", 
		"'='", "'('", "')'", null, null, null, "'\"'", null, "','"
	};
	private static readonly string[] _SymbolicNames = {
		null, "AND", "OR", "NOT", "TRUE", "FALSE", "GT", "GE", "NE", "LT", "LE", 
		"EQ", "LPAREN", "RPAREN", "DECIMAL", "IDENTIFIER", "WS", "Q", "STRING", 
		"COMMA"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "WarehouseFilterGrammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static WarehouseFilterGrammarLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x15', '\x96', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x5', '\x2', '.', '\n', '\x2', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x5', '\x3', '\x33', '\n', '\x3', '\x3', '\x4', 
		'\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x5', '\x4', '\x39', '\n', 
		'\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x5', '\x5', '\x43', 
		'\n', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x5', '\x6', 'O', '\n', '\x6', '\x3', '\a', '\x3', '\a', '\x3', 
		'\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', 
		'\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', 
		'\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xF', '\x5', '\xF', '\x65', '\n', '\xF', '\x3', '\xF', '\x6', 
		'\xF', 'h', '\n', '\xF', '\r', '\xF', '\xE', '\xF', 'i', '\x3', '\xF', 
		'\x3', '\xF', '\x6', '\xF', 'n', '\n', '\xF', '\r', '\xF', '\xE', '\xF', 
		'o', '\x5', '\xF', 'r', '\n', '\xF', '\x3', '\x10', '\x3', '\x10', '\a', 
		'\x10', 'v', '\n', '\x10', '\f', '\x10', '\xE', '\x10', 'y', '\v', '\x10', 
		'\x3', '\x10', '\x3', '\x10', '\x6', '\x10', '}', '\n', '\x10', '\r', 
		'\x10', '\xE', '\x10', '~', '\x5', '\x10', '\x81', '\n', '\x10', '\x3', 
		'\x11', '\x6', '\x11', '\x84', '\n', '\x11', '\r', '\x11', '\xE', '\x11', 
		'\x85', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x13', '\x3', '\x13', '\a', '\x13', '\x8E', '\n', '\x13', '\f', '\x13', 
		'\xE', '\x13', '\x91', '\v', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', 
		'\x14', '\x3', '\x14', '\x2', '\x2', '\x15', '\x3', '\x3', '\x5', '\x4', 
		'\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', 
		'\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', 
		'\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', '\x13', '%', 
		'\x14', '\'', '\x15', '\x3', '\x2', '\a', '\x3', '\x2', '\x32', ';', '\x5', 
		'\x2', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x6', '\x2', '\x32', 
		';', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x5', '\x2', '\v', '\f', 
		'\xE', '\xF', '\"', '\"', '\x5', '\x2', '\f', '\f', '\xF', '\xF', '$', 
		'$', '\x2', '\xA3', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '-', '\x3', '\x2', '\x2', '\x2', '\x5', '\x32', '\x3', '\x2', 
		'\x2', '\x2', '\a', '\x38', '\x3', '\x2', '\x2', '\x2', '\t', '\x42', 
		'\x3', '\x2', '\x2', '\x2', '\v', 'N', '\x3', '\x2', '\x2', '\x2', '\r', 
		'P', '\x3', '\x2', '\x2', '\x2', '\xF', 'R', '\x3', '\x2', '\x2', '\x2', 
		'\x11', 'U', '\x3', '\x2', '\x2', '\x2', '\x13', 'X', '\x3', '\x2', '\x2', 
		'\x2', '\x15', 'Z', '\x3', '\x2', '\x2', '\x2', '\x17', ']', '\x3', '\x2', 
		'\x2', '\x2', '\x19', '_', '\x3', '\x2', '\x2', '\x2', '\x1B', '\x61', 
		'\x3', '\x2', '\x2', '\x2', '\x1D', '\x64', '\x3', '\x2', '\x2', '\x2', 
		'\x1F', 's', '\x3', '\x2', '\x2', '\x2', '!', '\x83', '\x3', '\x2', '\x2', 
		'\x2', '#', '\x89', '\x3', '\x2', '\x2', '\x2', '%', '\x8B', '\x3', '\x2', 
		'\x2', '\x2', '\'', '\x94', '\x3', '\x2', '\x2', '\x2', ')', '*', '\a', 
		'\x43', '\x2', '\x2', '*', '+', '\a', 'P', '\x2', '\x2', '+', '.', '\a', 
		'\x46', '\x2', '\x2', ',', '.', '\a', '(', '\x2', '\x2', '-', ')', '\x3', 
		'\x2', '\x2', '\x2', '-', ',', '\x3', '\x2', '\x2', '\x2', '.', '\x4', 
		'\x3', '\x2', '\x2', '\x2', '/', '\x30', '\a', 'Q', '\x2', '\x2', '\x30', 
		'\x33', '\a', 'T', '\x2', '\x2', '\x31', '\x33', '\a', '~', '\x2', '\x2', 
		'\x32', '/', '\x3', '\x2', '\x2', '\x2', '\x32', '\x31', '\x3', '\x2', 
		'\x2', '\x2', '\x33', '\x6', '\x3', '\x2', '\x2', '\x2', '\x34', '\x35', 
		'\a', 'P', '\x2', '\x2', '\x35', '\x36', '\a', 'Q', '\x2', '\x2', '\x36', 
		'\x39', '\a', 'V', '\x2', '\x2', '\x37', '\x39', '\a', '#', '\x2', '\x2', 
		'\x38', '\x34', '\x3', '\x2', '\x2', '\x2', '\x38', '\x37', '\x3', '\x2', 
		'\x2', '\x2', '\x39', '\b', '\x3', '\x2', '\x2', '\x2', ':', ';', '\a', 
		'V', '\x2', '\x2', ';', '<', '\a', 'T', '\x2', '\x2', '<', '=', '\a', 
		'W', '\x2', '\x2', '=', '\x43', '\a', 'G', '\x2', '\x2', '>', '?', '\a', 
		'v', '\x2', '\x2', '?', '@', '\a', 't', '\x2', '\x2', '@', '\x41', '\a', 
		'w', '\x2', '\x2', '\x41', '\x43', '\a', 'g', '\x2', '\x2', '\x42', ':', 
		'\x3', '\x2', '\x2', '\x2', '\x42', '>', '\x3', '\x2', '\x2', '\x2', '\x43', 
		'\n', '\x3', '\x2', '\x2', '\x2', '\x44', '\x45', '\a', 'H', '\x2', '\x2', 
		'\x45', '\x46', '\a', '\x43', '\x2', '\x2', '\x46', 'G', '\a', 'N', '\x2', 
		'\x2', 'G', 'H', '\a', 'U', '\x2', '\x2', 'H', 'O', '\a', 'G', '\x2', 
		'\x2', 'I', 'J', '\a', 'h', '\x2', '\x2', 'J', 'K', '\a', '\x63', '\x2', 
		'\x2', 'K', 'L', '\a', 'n', '\x2', '\x2', 'L', 'M', '\a', 'u', '\x2', 
		'\x2', 'M', 'O', '\a', 'g', '\x2', '\x2', 'N', '\x44', '\x3', '\x2', '\x2', 
		'\x2', 'N', 'I', '\x3', '\x2', '\x2', '\x2', 'O', '\f', '\x3', '\x2', 
		'\x2', '\x2', 'P', 'Q', '\a', '@', '\x2', '\x2', 'Q', '\xE', '\x3', '\x2', 
		'\x2', '\x2', 'R', 'S', '\a', '@', '\x2', '\x2', 'S', 'T', '\a', '?', 
		'\x2', '\x2', 'T', '\x10', '\x3', '\x2', '\x2', '\x2', 'U', 'V', '\a', 
		'#', '\x2', '\x2', 'V', 'W', '\a', '?', '\x2', '\x2', 'W', '\x12', '\x3', 
		'\x2', '\x2', '\x2', 'X', 'Y', '\a', '>', '\x2', '\x2', 'Y', '\x14', '\x3', 
		'\x2', '\x2', '\x2', 'Z', '[', '\a', '>', '\x2', '\x2', '[', '\\', '\a', 
		'?', '\x2', '\x2', '\\', '\x16', '\x3', '\x2', '\x2', '\x2', ']', '^', 
		'\a', '?', '\x2', '\x2', '^', '\x18', '\x3', '\x2', '\x2', '\x2', '_', 
		'`', '\a', '*', '\x2', '\x2', '`', '\x1A', '\x3', '\x2', '\x2', '\x2', 
		'\x61', '\x62', '\a', '+', '\x2', '\x2', '\x62', '\x1C', '\x3', '\x2', 
		'\x2', '\x2', '\x63', '\x65', '\a', '/', '\x2', '\x2', '\x64', '\x63', 
		'\x3', '\x2', '\x2', '\x2', '\x64', '\x65', '\x3', '\x2', '\x2', '\x2', 
		'\x65', 'g', '\x3', '\x2', '\x2', '\x2', '\x66', 'h', '\t', '\x2', '\x2', 
		'\x2', 'g', '\x66', '\x3', '\x2', '\x2', '\x2', 'h', 'i', '\x3', '\x2', 
		'\x2', '\x2', 'i', 'g', '\x3', '\x2', '\x2', '\x2', 'i', 'j', '\x3', '\x2', 
		'\x2', '\x2', 'j', 'q', '\x3', '\x2', '\x2', '\x2', 'k', 'm', '\a', '\x30', 
		'\x2', '\x2', 'l', 'n', '\t', '\x2', '\x2', '\x2', 'm', 'l', '\x3', '\x2', 
		'\x2', '\x2', 'n', 'o', '\x3', '\x2', '\x2', '\x2', 'o', 'm', '\x3', '\x2', 
		'\x2', '\x2', 'o', 'p', '\x3', '\x2', '\x2', '\x2', 'p', 'r', '\x3', '\x2', 
		'\x2', '\x2', 'q', 'k', '\x3', '\x2', '\x2', '\x2', 'q', 'r', '\x3', '\x2', 
		'\x2', '\x2', 'r', '\x1E', '\x3', '\x2', '\x2', '\x2', 's', 'w', '\t', 
		'\x3', '\x2', '\x2', 't', 'v', '\t', '\x4', '\x2', '\x2', 'u', 't', '\x3', 
		'\x2', '\x2', '\x2', 'v', 'y', '\x3', '\x2', '\x2', '\x2', 'w', 'u', '\x3', 
		'\x2', '\x2', '\x2', 'w', 'x', '\x3', '\x2', '\x2', '\x2', 'x', '\x80', 
		'\x3', '\x2', '\x2', '\x2', 'y', 'w', '\x3', '\x2', '\x2', '\x2', 'z', 
		'|', '\a', '\x30', '\x2', '\x2', '{', '}', '\t', '\x4', '\x2', '\x2', 
		'|', '{', '\x3', '\x2', '\x2', '\x2', '}', '~', '\x3', '\x2', '\x2', '\x2', 
		'~', '|', '\x3', '\x2', '\x2', '\x2', '~', '\x7F', '\x3', '\x2', '\x2', 
		'\x2', '\x7F', '\x81', '\x3', '\x2', '\x2', '\x2', '\x80', 'z', '\x3', 
		'\x2', '\x2', '\x2', '\x80', '\x81', '\x3', '\x2', '\x2', '\x2', '\x81', 
		' ', '\x3', '\x2', '\x2', '\x2', '\x82', '\x84', '\t', '\x5', '\x2', '\x2', 
		'\x83', '\x82', '\x3', '\x2', '\x2', '\x2', '\x84', '\x85', '\x3', '\x2', 
		'\x2', '\x2', '\x85', '\x83', '\x3', '\x2', '\x2', '\x2', '\x85', '\x86', 
		'\x3', '\x2', '\x2', '\x2', '\x86', '\x87', '\x3', '\x2', '\x2', '\x2', 
		'\x87', '\x88', '\b', '\x11', '\x2', '\x2', '\x88', '\"', '\x3', '\x2', 
		'\x2', '\x2', '\x89', '\x8A', '\a', '$', '\x2', '\x2', '\x8A', '$', '\x3', 
		'\x2', '\x2', '\x2', '\x8B', '\x8F', '\x5', '#', '\x12', '\x2', '\x8C', 
		'\x8E', '\n', '\x6', '\x2', '\x2', '\x8D', '\x8C', '\x3', '\x2', '\x2', 
		'\x2', '\x8E', '\x91', '\x3', '\x2', '\x2', '\x2', '\x8F', '\x8D', '\x3', 
		'\x2', '\x2', '\x2', '\x8F', '\x90', '\x3', '\x2', '\x2', '\x2', '\x90', 
		'\x92', '\x3', '\x2', '\x2', '\x2', '\x91', '\x8F', '\x3', '\x2', '\x2', 
		'\x2', '\x92', '\x93', '\x5', '#', '\x12', '\x2', '\x93', '&', '\x3', 
		'\x2', '\x2', '\x2', '\x94', '\x95', '\a', '.', '\x2', '\x2', '\x95', 
		'(', '\x3', '\x2', '\x2', '\x2', '\x11', '\x2', '-', '\x32', '\x38', '\x42', 
		'N', '\x64', 'i', 'o', 'q', 'w', '~', '\x80', '\x85', '\x8F', '\x3', '\b', 
		'\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
